[{"/Users/tnluser/Desktop/Ashish/crypto-hunter/src/index.js":"1","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/App.js":"2","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/Header.js":"3","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/pages/HomePage.js":"4","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/pages/CoinPage.js":"5","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/CryptoContext.js":"6","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/Banner/Banner.js":"7","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/Banner/Carousel.js":"8","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/config/api.js":"9","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/CoinsTable.js":"10","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/CoinInfo.js":"11","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/config/data.js":"12","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/SelectButton.js":"13"},{"size":396,"mtime":1676728580387,"results":"14","hashOfConfig":"15"},{"size":747,"mtime":1676784995313,"results":"16","hashOfConfig":"15"},{"size":1453,"mtime":1676721810431,"results":"17","hashOfConfig":"15"},{"size":252,"mtime":1676730134847,"results":"18","hashOfConfig":"15"},{"size":4136,"mtime":1677324567215,"results":"19","hashOfConfig":"15"},{"size":608,"mtime":1676721331870,"results":"20","hashOfConfig":"15"},{"size":1420,"mtime":1676727465697,"results":"21","hashOfConfig":"15"},{"size":2350,"mtime":1676738606033,"results":"22","hashOfConfig":"15"},{"size":619,"mtime":1676727299972,"results":"23","hashOfConfig":"15"},{"size":6219,"mtime":1676783700094,"results":"24","hashOfConfig":"15"},{"size":3541,"mtime":1677334044405,"results":"25","hashOfConfig":"15"},{"size":215,"mtime":1677332865959,"results":"26","hashOfConfig":"15"},{"size":785,"mtime":1677334377892,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"4yv2nu",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tnluser/Desktop/Ashish/crypto-hunter/src/index.js",[],[],[],"/Users/tnluser/Desktop/Ashish/crypto-hunter/src/App.js",[],[],"/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/Header.js",[],[],"/Users/tnluser/Desktop/Ashish/crypto-hunter/src/pages/HomePage.js",[],[],"/Users/tnluser/Desktop/Ashish/crypto-hunter/src/pages/CoinPage.js",["72"],[],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport parse from 'html-react-parser';\nimport { CryptoState } from '../CryptoContext';\nimport { SingleCoin } from '../config/api';\nimport { LinearProgress, makeStyles, Typography } from '@material-ui/core';\nimport CoinInfo from '../components/CoinInfo';\nimport { numberWithCommas } from '../components/Banner/Carousel';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n  },\n  sidebar: {\n    width: '30%',\n    [theme.breakpoints.down('md')]: {\n      width: '100%',\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: 25,\n    borderRight: '2px solid grey',\n  },\n  heading: {\n    fontWeight: 'bold',\n    marginBottom: 20,\n    fontFamily: 'Montserrat',\n  },\n  description: {\n    width: '100%',\n    fontFamily: 'Montserrat',\n    padding: 25,\n    paddingBottom: 15,\n    paddingTop: 0,\n    textAlign: 'justify',\n  },\n  marketData: {\n    alignSelf: 'start',\n    padding: 25,\n    paddingTop: 10,\n    width: '100%',\n    [theme.breakpoints.down('md')]: {\n      display: 'flex',\n      justifyContent: 'space-around',\n    },\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    [theme.breakpoints.down('xs')]: {\n      alignItems: 'start',\n    },\n  },\n}));\n\nconst CoinPage = () => {\n  const { id } = useParams();\n  const [coin, setCoin] = useState();\n\n  const classes = useStyles();\n  const { currency, symbol } = CryptoState();\n\n  const fetchCoin = async () => {\n    const { data } = await axios.get(SingleCoin(id));\n    setCoin(data);\n  };\n  useEffect(() => {\n    console.log('aaaaaa', id);\n    fetchCoin();\n  }, []);\n\n  if (!coin) return <LinearProgress style={{ backgroundColor: 'gold' }} />;\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.sidebar}>\n        <img\n          src={coin?.image.large}\n          alt={coin?.name}\n          height=\"200\"\n          style={{ marginBottom: 20 }}\n        />\n        <Typography variant=\"h3\" className={classes.heading}>\n          {coin?.name}\n        </Typography>\n        <Typography variant=\"subtitle1\" className={classes.description}>\n          {parse(coin?.description.en.split('. ')[0])}.\n        </Typography>\n        <div className={classes.marketData}>\n          <span style={{ display: 'flex' }}>\n            <Typography variant=\"h5\" className={classes.heading}>\n              Rank:\n            </Typography>\n            &nbsp; &nbsp;\n            <Typography\n              variant=\"h5\"\n              style={{\n                fontFamily: 'Montserrat',\n              }}\n            >\n              {coin?.market_cap_rank}\n            </Typography>\n          </span>\n          <span style={{ display: 'flex' }}>\n            <Typography variant=\"h5\" className={classes.heading}>\n              Current Price:\n            </Typography>\n            &nbsp; &nbsp;\n            <Typography\n              variant=\"h5\"\n              style={{\n                fontFamily: 'Montserrat',\n              }}\n            >\n              {symbol}{' '}\n              {numberWithCommas(\n                coin?.market_data.current_price[currency.toLowerCase()]\n              )}\n            </Typography>\n          </span>\n          <span style={{ display: 'flex' }}>\n            <Typography variant=\"h5\" className={classes.heading}>\n              Market Cap:\n            </Typography>\n            &nbsp; &nbsp;\n            <Typography\n              variant=\"h5\"\n              style={{\n                fontFamily: 'Montserrat',\n              }}\n            >\n              {symbol}{' '}\n              {numberWithCommas(\n                coin?.market_data.market_cap[currency.toLowerCase()]\n                  .toString()\n                  .slice(0, -6)\n              )}\n              M\n            </Typography>\n          </span>\n        </div>\n      </div>\n      <CoinInfo coin={coin} />\n    </div>\n  );\n};\n\nexport default CoinPage;\n","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/CryptoContext.js",[],[],"/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/Banner/Banner.js",[],[],"/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/Banner/Carousel.js",["73"],[],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport axios from 'axios';\nimport { TrendingCoins } from '../../config/api';\nimport { CryptoState } from '../../CryptoContext';\nimport AliceCarousel from 'react-alice-carousel';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  carousel: {\n    height: '50%',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  carouselItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    cursor: 'pointer',\n    textTransform: 'uppercase',\n    color: 'white',\n  },\n}));\n\nexport const numberWithCommas = (x) => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nconst Carousel = () => {\n  const [trending, setTrending] = useState([]);\n  const classes = useStyles();\n  const { currency, symbol } = CryptoState();\n\n  const fetchTrendingCoins = async () => {\n    const { data } = await axios.get(TrendingCoins(currency));\n    setTrending(data);\n  };\n\n  useEffect(() => {\n    fetchTrendingCoins();\n  }, [currency]);\n\n  const items = trending.map((coin) => {\n    let profit = coin?.price_change_percentage_24h >= 0;\n    return (\n      <Link className={classes.carouselItem} to={`coins/${coin.id}`}>\n        <img\n          src={coin?.image}\n          alt={coin.name}\n          height=\"80\"\n          style={{ marginBottom: 10 }}\n        />\n        <span>\n          {coin?.symbol}\n          &nbsp;\n          <span\n            style={{\n              color: profit > 0 ? 'rgb(14, 203, 129)' : 'red',\n              fontWeight: 500,\n            }}\n          >\n            {profit && '+'} {coin?.price_change_percentage_24h.toFixed(2)}%\n          </span>\n        </span>\n        <span style={{ fontSize: 22, fontWeight: 500 }}>\n          {symbol} {numberWithCommas(coin?.current_price.toFixed(2))}\n        </span>\n      </Link>\n    );\n  });\n\n  const responsive = {\n    0: {\n      items: 2,\n    },\n    512: {\n      items: 4,\n    },\n  };\n\n  return (\n    <div className={classes.carousel}>\n      <AliceCarousel\n        mouseTracking\n        infinite\n        autoPlayInterval={1000}\n        animationDuration={1500}\n        disableDotsControls\n        disableButtonsControls\n        responsive={responsive}\n        autoPlay\n        items={items}\n      />\n    </div>\n  );\n};\n\nexport default Carousel;\n","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/config/api.js",[],[],"/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/CoinsTable.js",["74"],[],"import React, { useEffect, useState } from 'react';\nimport { CoinList } from '../config/api';\nimport { useNavigate } from 'react-router-dom';\nimport { CryptoState } from '../CryptoContext';\nimport axios from 'axios';\nimport {\n  Container,\n  createTheme,\n  LinearProgress,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  ThemeProvider,\n  Typography,\n} from '@material-ui/core';\nimport { numberWithCommas } from './Banner/Carousel';\nimport { Pagination } from '@material-ui/lab';\n\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#fff',\n    },\n    type: 'dark',\n  },\n});\n\nconst useStyles = makeStyles(() => ({\n  row: {\n    backgroundColor: '#16171a',\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: '#131111',\n    },\n    fontFamily: 'Montserrat',\n  },\n  pagination: {\n    '& .MuiPaginationItem-root': {\n      color: 'gold',\n    },\n  },\n}));\n\nconst CoinsTable = () => {\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState('');\n  const [page, setPage] = useState(1);\n  const { currency, symbol } = CryptoState();\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const { data } = await axios.get(CoinList(currency));\n    console.log(data);\n\n    setCoins(data);\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchCoins();\n  }, [currency]);\n\n  const handleSearch = () => {\n    return coins.filter(\n      (coin) =>\n        coin.name.toLowerCase().includes(search) ||\n        coin.symbol.toLowerCase().includes(search)\n    );\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Container style={{ textAlign: 'center' }}>\n        <Typography\n          variant=\"h4\"\n          style={{ margin: 18, fontFamily: 'Montserrat' }}\n        >\n          Cryptocurrency Prices by Market Cap\n        </Typography>\n        <TextField\n          label=\"Search For a Crypto Currency..\"\n          variant=\"outlined\"\n          style={{ marginBottom: 20, width: '100%' }}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <TableContainer>\n          {loading ? (\n            <LinearProgress style={{ backgroundColor: 'gold' }} />\n          ) : (\n            <Table>\n              <TableHead style={{ backgroundColor: '#EEBC1D' }}>\n                <TableRow>\n                  {['Coin', 'Price', '24h Change', 'Market Cap'].map((head) => (\n                    <TableCell\n                      style={{\n                        color: 'black',\n                        fontWeight: '700',\n                        fontFamily: 'Montserrat',\n                      }}\n                      key={head}\n                      align={head === 'Coin' ? '' : 'right'}\n                    >\n                      {head}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {handleSearch()\n                  .slice((page - 1) * 10, page * 10)\n                  .map((row) => {\n                    const profit = row?.price_change_percentage_24h >= 0;\n                    return (\n                      <TableRow\n                        onClick={() => navigate(`/coins/${row.id}`)}\n                        className={classes.row}\n                        key={row.name}\n                      >\n                        <TableCell\n                          component=\"th\"\n                          scope=\"row\"\n                          style={{\n                            display: 'flex',\n                            gap: 15,\n                          }}\n                        >\n                          <img\n                            src={row?.image}\n                            alt={row.name}\n                            height=\"50\"\n                            style={{ marginBottom: 10 }}\n                          />\n                          <div\n                            style={{ display: 'flex', flexDirection: 'column' }}\n                          >\n                            <span\n                              style={{\n                                textTransform: 'uppercase',\n                                fontSize: 22,\n                              }}\n                            >\n                              {row.symbol}\n                            </span>\n                            <span style={{ color: 'darkgrey' }}>\n                              {row.name}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {symbol}{' '}\n                          {numberWithCommas(row.current_price.toFixed(2))}\n                        </TableCell>\n                        <TableCell\n                          align=\"right\"\n                          style={{\n                            color: profit > 0 ? 'rgb(14, 203, 129)' : 'red',\n                            fontWeight: 500,\n                          }}\n                        >\n                          {profit && '+'}\n                          {row.price_change_percentage_24h.toFixed(2)}%\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {symbol}{' '}\n                          {numberWithCommas(\n                            row.market_cap.toString().slice(0, -6)\n                          )}\n                          M\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          )}\n        </TableContainer>\n        <Pagination\n          count={(handleSearch()?.length / 10).toFixed(0)}\n          style={{\n            padding: 20,\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n          classes={{ ul: classes.pagination }}\n          onChange={(_, value) => {\n            setPage(value);\n            window.scroll(0, 450);\n          }}\n        />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default CoinsTable;\n","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/CoinInfo.js",["75"],[],"import React, { useEffect, useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport {\n  CircularProgress,\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from '@material-ui/core';\nimport { Line } from 'react-chartjs-2';\nimport { CryptoState } from '../CryptoContext';\nimport { HistoricalChart } from '../config/api';\nimport { chartDays } from '../config/data';\nimport axios from 'axios';\nimport SelectButton from './SelectButton';\n\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#fff',\n    },\n    type: 'dark',\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: '75%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 25,\n    padding: 40,\n    [theme.breakpoints.down('md')]: {\n      width: '100%',\n      marginTop: 0,\n      padding: 20,\n      paddingTop: 0,\n    },\n  },\n}));\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst CoinInfo = ({ coin }) => {\n  const [historicalData, setHistoricalData] = useState();\n  const [days, setDays] = useState(1);\n  const [flag, setflag] = useState(false);\n  const { currency } = CryptoState();\n  const classes = useStyles();\n\n  const fetchHistoricalData = async () => {\n    const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\n    setflag(true);\n    setHistoricalData(data.prices);\n  };\n\n  useEffect(() => {\n    fetchHistoricalData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className={classes.container}>\n        {!historicalData | (flag === false) ? (\n          <CircularProgress\n            style={{ color: 'gold' }}\n            size={250}\n            thickness={1}\n          />\n        ) : (\n          <>\n            <Line\n              data={{\n                labels: historicalData?.map((coin) => {\n                  let date = new Date(coin[0]);\n                  let time =\n                    date.getHours() > 12\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\n                  return days === 1 ? time : date.toLocaleDateString();\n                }),\n                datasets: [\n                  {\n                    data: historicalData?.map((coin) => coin[1]),\n                    label: `Price ( Past ${days} Days ) in ${currency}`,\n                    borderColor: '#EEBC1D',\n                  },\n                ],\n              }}\n              options={{\n                elements: {\n                  point: {\n                    radius: 1,\n                  },\n                },\n              }}\n            />\n            <div\n              style={{\n                display: 'flex',\n                marginTop: 20,\n                justifyContent: 'space-around',\n                width: '100%',\n              }}\n            >\n              {chartDays.map((day) => (\n                <SelectButton\n                  key={day.value}\n                  onClick={() => {\n                    setDays(day.value);\n                    setflag(false);\n                  }}\n                  selected={day.value === days}\n                >\n                  {day.label}\n                </SelectButton>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default CoinInfo;\n","/Users/tnluser/Desktop/Ashish/crypto-hunter/src/config/data.js",[],[],"/Users/tnluser/Desktop/Ashish/crypto-hunter/src/components/SelectButton.js",[],[],{"ruleId":"76","severity":1,"message":"77","line":76,"column":6,"nodeType":"78","endLine":76,"endColumn":8,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":41,"column":6,"nodeType":"78","endLine":41,"endColumn":16,"suggestions":"81"},{"ruleId":"76","severity":1,"message":"82","line":68,"column":6,"nodeType":"78","endLine":68,"endColumn":16,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":77,"column":6,"nodeType":"78","endLine":77,"endColumn":8,"suggestions":"85"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCoin' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["86"],"React Hook useEffect has a missing dependency: 'fetchTrendingCoins'. Either include it or remove the dependency array.",["87"],"React Hook useEffect has a missing dependency: 'fetchCoins'. Either include it or remove the dependency array.",["88"],"React Hook useEffect has a missing dependency: 'fetchHistoricalData'. Either include it or remove the dependency array.",["89"],{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [fetchCoin, id]",{"range":"98","text":"99"},"Update the dependencies array to be: [currency, fetchTrendingCoins]",{"range":"100","text":"101"},"Update the dependencies array to be: [currency, fetchCoins]",{"range":"102","text":"103"},"Update the dependencies array to be: [fetchHistoricalData]",{"range":"104","text":"105"},[1858,1860],"[fetchCoin, id]",[1066,1076],"[currency, fetchTrendingCoins]",[1481,1491],"[currency, fetchCoins]",[1612,1614],"[fetchHistoricalData]"]